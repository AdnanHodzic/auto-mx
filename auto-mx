#!/bin/bash
#
# Mendix Installer (auto-mx)
# Utility to interactively install and setup
# Mendix, as well rest of utility's which
# are needed to run Mendix applications.

app_servicename_func(){
# Service Name
echo -e "\n-----------------------------------------\n"
read -p "Specify \"Service Name\", i.e (NewApp): " app_servicename
}

app_displayname_func(){
# Display Name 
echo -e "\n-----------------------------------------\n"
read -p "Specify \"Display Name\", i.e (NewApp): " app_displayname
}

app_description_func(){
# Description:  
echo -e "\n-----------------------------------------\n"
read -p "Specify \"Description\": " app_description
}

app_startup_func(){
# Startup Type
echo -e "\n-----------------------------------------\n"
echo -e "Start Mendix at boot?"
read -p "[Y]es, [N]o, [S]kip: " app_startup

for letter in "$app_startup"; do

if [[ "$letter" == [Yy] ]]; 
then
	# Start Mendix at boot
	crontab -l > bootmx
	echo -e "#Start Mendix at boot\n@reboot /usr/bin/m2ee start" >> bootmx
	crontab bootmx
	rm bootmx

	boot="Yes"	
	continue

elif [[ "$letter" == [Nn]* ]]; 
then
	echo -e "\nMendix will not start at boot ...\n"
	boot="No"
	continue

elif [[ "$letter" == [Ss]* ]]; 
then
	echo -e "\nSetting Mendix at boot, skipped ..."
	boot="Option skip"
	
	continue

else 
	echo -e "\n------------------------------------\n"
	echo    "Non existing value: exiting ..."
	echo -e "\n------------------------------------\n"
	
	exit 1
fi
done
}

app_username_func(){
# Username 
echo -e "-----------------------------------------\n"
read -p "Specify \"User Name\": " app_username
}

app_password_func(){

# Password 
echo -e "\n----------------------------------------\n"
read -p "Specify \"User password\": " app_password
}

spec(){
echo -e "\n-----------------------------------------\n"
echo -e "\nYou've specified following values:\n"
echo -e "\n++++++++++++++++++++++++++++++++++++++++\n"
echo -e "Service name: $app_servicename"
echo -e "Display name: $app_displayname"
echo -e "Description: $app_description"
echo -e "Start at boot: $boot"
echo -e "App. username: $app_username"
echo -e "App. password: $app_password"
echo -e "\n++++++++++++++++++++++++++++++++++++++++\n"
}

# Step1
while [ step1 != "Q" ]
do 
clear

# Display menu
echo -e "\n------------------------------------------\n"
echo -e "Welcome to Mendix installer (auto-mx)\n"
echo -e "\nPlease follow on-screen instructions"
echo -e "\n------------------------------------------\n"

echo -e "Continue?\n"
echo "[Y]es"
echo "[N]o"
echo "[Q]uit"

read -p ": " step1
	case $step1 in
	
	Q|q)
		echo "Goodbye!"
		exit 1
	;;

	Y|y)
	# calling step1 functions
	app_servicename_func
	app_displayname_func
	app_description_func
	app_startup_func
	app_username_func
	app_password_func

	spec
	break	
	;;

	N|n)
		echo "Aborting installation"
		exit 1
	;;

	*) 
	echo "Non existing value"
	;;
	
	esac

	echo "press Enter for menu"
	read key
done

# Step2
while [ step2 != "Q" ]
do 
clear

spec

echo "[N]ext Step, [E]edit Existing, [F]inish: "

read -p ": " step2
	case $step2 in 

	Q|q)
		echo "Goodbye!"
		exit
	;;

	N|n)
		echo "Moving to next step"
		break
	;;
	
	E|e)
		spec
	
		echo -e "\nWhat would you like to edit?\n"
		echo "[1] Service Name"
		echo "[2] Display Name"
		echo "[3] Description"
		echo "[4] Start at boot"
		echo "[5] App. username"
		echo "[6] App. password"
		echo "[F]inish editing"
	
	read -p "Enter option number: " step1_edit

	for letter in "$step1_edit"; do

	if [[ "$letter" == [1] ]]; 
	then
		app_servicename_func
		spec

	elif [[ "$letter" == [2] ]]; 
	then
		app_displayname_func
		spec

	elif [[ "$letter" == [3] ]]; 
	then
		app_description_func
		spec

	elif [[ "$letter" == [4] ]]; 
	then
		app_startup_func
		spec

	elif [[ "$letter" == [5] ]]; 
	then
		app_username_func
		spec
	
	elif [[ "$letter" == [6] ]]; 
	then
		app_password_func
		spec
	elif [[ "$letter" == [Ff] ]]; 
	then
		echo "finishing"
		break

	else
		echo "Seriously?"
		# exit | exit 1			

	fi
	done
	;;

	F|f)
		echo "my work is done here"
		break
	;;

	*) 
	echo "Non existing value"
	;;
	
	esac

	echo "press Enter for menu"
	read key
done
	
echo "Step 3!"

exit 0
